
The following is pseudocode for a naive implementation of the discrete Fourier transform. This algorithm is commonly known as the Cooleyâ€“Tukey Fast Fourier Transform algorithm.

Input: an array A of complex numbers of length n

Output: an array B of complex numbers of length n

1: if n == 1 then
2:     B[0] := A[0]
3: else
4:     for k := 0 to n/2-1
5:         B[k] := A[k] + A[n/2+k]
6:         B[n/2+k] := A[k] - A[n/2+k]
7:     end for
8:     C := FFT(B[0..n/2-1])
9:     D := FFT(B[n/2..n-1])
10:    for k := 0 to n/2-1
11:        B[k] := C[k] + exp(-2*pi*k*i/n)*D[k]
12:        B[n/2+k] := C[k] - exp(-2*pi*k*i/n)*D[k]
13:    end for
14: end if
15: return B

